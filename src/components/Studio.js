"use client"
import {useState, useEffect} from "react"
import Image from "next/image"
import Room from './Room'
import Review from './Review'

const getLines = text => {
	const lines = text.split("\n")
	return lines.map((line, index) => {
		return (
			<p key={index} className="relative">
				{line}
			</p>
		)
	})
}

export default function Studio() {
	const [studio, setStudio] = useState({
		title: "",
		photo: "",
		desc: "",
		rating: "",
		openTime: "",
		closeTime: "",
		options: "",
		rooms: []
	})

	useEffect(() => {
		setStudio({
			title: "Tema Studio",
			image: "https://placehold.co/800x240.png",
			desc: "–°–∞–º—ã–µ –≤–∫—É—Å–Ω—ã–µ –ø–∏—Ä–æ–∂–∫–∏ —Å –∫–∞—Ä—Ç–æ—à–∫–æ–π",
			rating: "4.4",
			openTime: "10:00",
			closeTime: "0:00",
			options: `–ö–∞—Ä–¥–∞–Ω ‚Äî 50 ‚ÇΩ
					–¢–∞—Ä–µ–ª–∫–∏ ‚Äî 50 ‚ÇΩ
					–î—Ä—É–≥–∏–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã ‚Äî 50 ‚ÇΩ`,
			contacts: [
				{
					title: '–¢–µ–ª–µ—Ñ–æ–Ω',
                    value: '+7 (999) 999-99-99'
				},
				{
					title: 'telegram',
					value: '@tema_studio'
				}
			],
			rooms: [
				{
					title: 'Studio 1',
					price: 300,
					image: 'https://placehold.co/320x150.png',
					desc: '–ö—Ä–∞—Å–∏–≤–∞—è –∫–æ–º–Ω–∞—Ç–∞ –∏ –∫–æ–Ω–∫—É—Ä—Å—ã –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã–µ'
				},
				{
					title: 'Studio 2',
					price: 900,
					image: 'https://placehold.co/320x150.png',
					desc: '–ó–¥–µ—Å—å –∑–∞–ø–∏—Å—ã–≤–∞–ª–∏—Å—å –ú—ç–π–±–∏ –ë—ç–π–±–∏ –∏ –î–æ—Ä–∞'
				}
			],
			reviews: [
				{
					rating: 4,
					text: '–û—á–µ–Ω—å –∫—Ä–∞—Å–∏–≤–∞—è —Å—Ç—É–¥–∏—è, –º—É–∑—ã–∫–∞–Ω—Ç—ã –æ—á–µ–Ω—å –∫—Ä–∞—Å–∏–≤—ã–µ',
					room: 'Studio 1',
				},
				{
					rating: 5,
					text: '–ö—Ä—É—Ç–∞—è —Å—Ç—É–¥–∏—è, –∑–≤—É–∫ —Ö–æ—Ä–æ—à–∏–π, –ø–æ–º–µ—â–µ–Ω–∏—è –ø—Ä–æ—Å—Ç–æ—Ä–Ω—ã–µ –∏ —É–¥–æ–±–Ω—ã–µ —Å–ø–∞—Å–∏–±–æ —Å–æ–∑–¥–∞—Ç–µ–ª—é —Å–∞–π—Ç–∞ –∑–∞ —Ç–∞–∫–æ–π —É–¥–æ–±–Ω—ã–π —Å–∞–π—Ç',
					room: 'Studio 1',
				},
				{
					rating: 3,
					text: '–ê –º–Ω–µ –ø–æ–∫–∞–∑–∞–ª–æ—Å—å, —á—Ç–æ —Å—Ç—É–¥–∏—è –ø–∞—Ö–Ω–µ—Ç —Å–æ–ª–µ–Ω—ã–º–∏ –æ–≥—É—Ä—Ü–∞–º–∏, –∞ —è –Ω–µ –ª—é–±–ª—é —Å–æ–ª–µ–Ω—ã–µ –æ–≥—É—Ä—Ü—ã, –Ω–æ —Å–∞–π—Ç –∫—Ä—É—Ç–æ–π –ø–æ—ç—Ç–æ–º—É –ø–ª—é—Å —Ç—Ä–∏ –±–∞–ª–ª–∞',
					room: 'Studio 2',
				}
			]
		})
	}, [setStudio])

	return (
		<article>
			<div className="top mb-6">
				<Image className="rounded-2xl bottom-right-shadow mb-6" src={studio.image} width="800" height="240" alt="" />
				<h1 className="text-2xl font-bold mb-3">{studio.title}</h1>
				<span className="text-secondary block mb-4">{studio.desc}</span>

				<div className="flex text-lg gap-10">
					<span>‚òÖ {studio.rating}</span>
					<span>üïî {studio.openTime} ‚Äî {studio.closeTime}</span>
					{studio.contacts && studio.contacts.map((contact, index) =>
                        <div key={index} className="flex items-center gap-2">
                            <span className="text-secondary">{contact.title}:</span>
                            <span className="text-secondary">{contact.value}</span>
                        </div>
					)}
				</div>
			</div>

			{studio.options &&
				<div className="mb-6 options">
					<h2 className="text-lg font-semibold mb-3 relative">–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –æ–ø—Ü–∏–∏</h2>
					{getLines(studio.options)}
				</div>
			}

			<div className="rooms mb-6">
				<h2 className="text-lg font-semibold mb-3 relative">–ö–æ–º–Ω–∞—Ç—ã:</h2>
				<div className="rooms flex justify-between gap-4 flex-wrap mx-auto conte">{
					studio.rooms.map((room, index) =>
						<Room room={room} key={index} />
					)
				}</div>
			</div>

			{studio.reviews &&
				<div className="mb-6 options">
					<h2 className="text-lg font-semibold mb-3 relative">–û—Ç–∑—ã–≤—ã:</h2>
					<div className="flex flex-col gap-10 items-center">
						{studio.reviews.map((review, index) =>
							<Review review={review} key={index}/>
						)}
					</div>
				</div>
			}
		</article>
	)
}
